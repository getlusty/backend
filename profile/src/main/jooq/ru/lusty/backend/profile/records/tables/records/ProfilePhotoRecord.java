/*
 * This file is generated by jOOQ.
 */
package ru.lusty.backend.profile.records.tables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.lusty.backend.profile.records.tables.ProfilePhoto;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfilePhotoRecord extends UpdatableRecordImpl<ProfilePhotoRecord> implements Record3<UUID, UUID, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.profile_photo.profile_id</code>.
     */
    public ProfilePhotoRecord setProfileId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.profile_photo.profile_id</code>.
     */
    public UUID getProfileId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.profile_photo.file_id</code>.
     */
    public ProfilePhotoRecord setFileId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.profile_photo.file_id</code>.
     */
    public UUID getFileId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.profile_photo.priority</code>.
     */
    public ProfilePhotoRecord setPriority(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.profile_photo.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ProfilePhoto.PROFILE_PHOTO.PROFILE_ID;
    }

    @Override
    public Field<UUID> field2() {
        return ProfilePhoto.PROFILE_PHOTO.FILE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return ProfilePhoto.PROFILE_PHOTO.PRIORITY;
    }

    @Override
    public UUID component1() {
        return getProfileId();
    }

    @Override
    public UUID component2() {
        return getFileId();
    }

    @Override
    public Integer component3() {
        return getPriority();
    }

    @Override
    public UUID value1() {
        return getProfileId();
    }

    @Override
    public UUID value2() {
        return getFileId();
    }

    @Override
    public Integer value3() {
        return getPriority();
    }

    @Override
    public ProfilePhotoRecord value1(UUID value) {
        setProfileId(value);
        return this;
    }

    @Override
    public ProfilePhotoRecord value2(UUID value) {
        setFileId(value);
        return this;
    }

    @Override
    public ProfilePhotoRecord value3(Integer value) {
        setPriority(value);
        return this;
    }

    @Override
    public ProfilePhotoRecord values(UUID value1, UUID value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfilePhotoRecord
     */
    public ProfilePhotoRecord() {
        super(ProfilePhoto.PROFILE_PHOTO);
    }

    /**
     * Create a detached, initialised ProfilePhotoRecord
     */
    public ProfilePhotoRecord(UUID profileId, UUID fileId, Integer priority) {
        super(ProfilePhoto.PROFILE_PHOTO);

        setProfileId(profileId);
        setFileId(fileId);
        setPriority(priority);
        resetChangedOnNotNull();
    }
}
